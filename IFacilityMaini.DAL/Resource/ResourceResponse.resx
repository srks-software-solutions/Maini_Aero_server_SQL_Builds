<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddedSuccessMessage" xml:space="preserve">
    <value>Item Added Successfully</value>
    <comment>Insertion done Successfully</comment>
  </data>
  <data name="ContactExists" xml:space="preserve">
    <value>Contact Name and EmailId Already Exists</value>
    <comment>ContactName and EmailId Already Exists</comment>
  </data>
  <data name="DeletedSuccessMessage" xml:space="preserve">
    <value>Item Deleted Successfully</value>
    <comment>Deletion Done Successfully</comment>
  </data>
  <data name="DeleteThisRecord" xml:space="preserve">
    <value>Are You sure you want to Delete this Record?</value>
    <comment>Are You sure you want to Delete this Record?</comment>
  </data>
  <data name="DiscardSuccessMessage" xml:space="preserve">
    <value>Candidate details discarded successfully</value>
    <comment>Candidate details discarded successfully</comment>
  </data>
  <data name="ExcelUploadCandidatesNotFound" xml:space="preserve">
    <value>No candidates found in list</value>
    <comment>No candidates found in list</comment>
  </data>
  <data name="ExceptionMessage" xml:space="preserve">
    <value>An error has ocoured please contact system admin</value>
    <comment>Exception Message</comment>
  </data>
  <data name="FailureMessage" xml:space="preserve">
    <value>Item Not Updated</value>
    <comment>Insertion or updation is not done</comment>
  </data>
  <data name="FileUploaderFailure" xml:space="preserve">
    <value>Please Upload a file</value>
    <comment>Please Upload a file</comment>
  </data>
  <data name="FileUploaderSuccess" xml:space="preserve">
    <value>Uploaded successful</value>
    <comment>Uploaded successful</comment>
  </data>
  <data name="LoginSuccessful" xml:space="preserve">
    <value>Login Successful</value>
    <comment>Login Successful</comment>
  </data>
  <data name="LoginUnSuccessful" xml:space="preserve">
    <value>Login Un Successful</value>
    <comment>Login Un Successful</comment>
  </data>
  <data name="LogoutSuccessful" xml:space="preserve">
    <value>Logout Successful</value>
    <comment>LogoutSuccessful</comment>
  </data>
  <data name="LogoutUnSuccessful" xml:space="preserve">
    <value>Logout Un Successful</value>
    <comment>Logout Un Successful</comment>
  </data>
  <data name="MailSentSuccessful" xml:space="preserve">
    <value>Mail Sent Successful</value>
    <comment>Mail Sent Successful</comment>
  </data>
  <data name="NoItemsFound" xml:space="preserve">
    <value>No Data Found</value>
    <comment>No data found</comment>
  </data>
  <data name="NoOrganizationExistsForThisUser" xml:space="preserve">
    <value>No Organization Exists For This User</value>
    <comment>No Organization Exists For This User</comment>
  </data>
  <data name="PasswordResetSuccessful" xml:space="preserve">
    <value>Password Reset Successful</value>
    <comment>Password Reset Successful</comment>
  </data>
  <data name="ProvideCandidateId" xml:space="preserve">
    <value>Please provide candidateId</value>
    <comment>Please provide candidateId</comment>
  </data>
  <data name="ProvideNextToStage" xml:space="preserve">
    <value>Please provide next to stage</value>
    <comment>Please provide next to stage</comment>
  </data>
  <data name="ReccordAssociated" xml:space="preserve">
    <value>This Record is associated with other data and cannot be deleted and can be Archieved</value>
    <comment>This Record is associated with other data and cannot be deleted and can be Archieved</comment>
  </data>
  <data name="SuccessMessage" xml:space="preserve">
    <value>Item Updated Successfully</value>
    <comment>Insertion or updation done sucessfully</comment>
  </data>
  <data name="UpdatedSuccessMessage" xml:space="preserve">
    <value>Item Updated Successfully</value>
    <comment>Updation Done Successfully</comment>
  </data>
  <data name="UserDoesNotExists" xml:space="preserve">
    <value>User Does Not Exists</value>
    <comment>User Does Not Exists</comment>
  </data>
  <data name="UserExists" xml:space="preserve">
    <value>User Exists</value>
    <comment>User Exists</comment>
  </data>
  <data name="UserNameExists" xml:space="preserve">
    <value>User Name Already Exists</value>
    <comment>User Name Already Exists</comment>
  </data>
  <data name="LinkError" xml:space="preserve">
    <value>Please check with link</value>
    <comment>Please check with link</comment>
  </data>
  <data name="LinkTimedOut" xml:space="preserve">
    <value>Link expired</value>
    <comment>Link expired</comment>
  </data>
  <data name="UserNameDoesNotExists" xml:space="preserve">
    <value>User Name Does Not Exists</value>
    <comment>User Name Does Not Exists</comment>
  </data>
  <data name="ApprovedSuccessful" xml:space="preserve">
    <value>Approved Successful</value>
    <comment>Approved Successful</comment>
  </data>
  <data name="DocumentUploadedSuccessful" xml:space="preserve">
    <value>Document Uploaded Successfully</value>
    <comment>Document Uploaded Successfully</comment>
  </data>
  <data name="DSRUploaderSuccess" xml:space="preserve">
    <value>DSR Uploaded Successfully</value>
    <comment>DSR Uploaded Successfully</comment>
  </data>
  <data name="NoNewFaceDetected" xml:space="preserve">
    <value>No New Face Detected</value>
    <comment>No New Face Detected</comment>
  </data>
  <data name="ClosedFgPartNo" xml:space="preserve">
    <value>Fg Part Number is Closed Successfully</value>
    <comment>Fg Part Number is Closed Successfully</comment>
  </data>
  <data name="LoginAgain" xml:space="preserve">
    <value>Please Login Again and Try</value>
    <comment>Please Login Again and Try</comment>
  </data>
</root>